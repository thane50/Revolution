use Libraries.Game.Game
use Libraries.Game.all
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.all
use Libraries.Game.Physics.all
use Libraries.Game.GameInput
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputMonitor
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Compute.Vector2
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Events.all
use Libraries.Game.Graphics.ImageSheet

class Main is Game, MouseListener
    //Keyboard
    InputMonitor monitor
    KeyboardEvent keys
    //color
    Color color
    //Drawables
    Drawable background
    Drawable nukeCirc
    Drawable point1
    Drawable point2
    Drawable point3
    Drawable missile
    Drawable missilepath
    Drawable target
    //Labels
    Label label
    Audio missileSound
    Audio impactSound
    action Main
        StartGame()
    end

  
    action CreateGame
        SetScreenSize(1024, 576)
        background:Load("nuketown.png")
        background:SetSize(1024, 576)
        Add(background)    
        point1:LoadFilledTriangle(30,40,50,10,10,10)
        point1:SetSize(10,10)
        point1:SetPosition(1024/2 + 250, 576/2)
        Add(point1)
        //point 2
        point2:LoadFilledTriangle(30,40,50,10,10,10)
        point2:SetSize(10,10)
        point2:SetPosition(575,465)
        Add(point2)
        point2:SetColor(color:Red())
        //point3
        point3:LoadFilledTriangle(30,40,50,10,10,10)
        point3:SetSize(10,10)
        point3:SetPosition(170,415)
        Add(point3)
        point3:SetColor(color:Blue())
end

  
    action Update(number seconds)
    if monitor:IsKeyPressed(Keys:SPACE)
Add(countdown)
ctrue = true
end
countdown:SetText("Launching in " + count/10)
if count > 0 and ctrue = true
count = count - 1
elseif ctrue = false
count = 50
end
  
    end
    action ClickedMouse(MouseEvent event)
        if monitor:IsClicked()
            
end
end
